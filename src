const fs = require('fs');
const util = require('util')

class DbApiGen
{
    static get start_of_doc()
    {
        return "import base\n" + "import logging\n\n" +
            "class DbAPI(base.DBApiBase):\n" +
            "    def __init__(self, self_data, login_endpoint, api_endpoint):\n" +
            "        self.db_sess = base.DBApiBase(self_data, login_endpoint, api_endpoint)\n" +
            "    def isValid(self):\n" +
            "        return self.db_sess.isValid()\n\n"
    }

    static get end_of_doc()
    {
        return "    @staticmethod\n" +
            "    def create_connection(self_data, login_endpoint, api_endpoint):\n" +
            "        return DbAPI(self_data, login_endpoint, api_endpoint)\n"
    }

    static gen_function(fn_name)
    {
        return util.format("    def %s(self, q)\n" +
            "        return self.db_sess.callAPI(command_name = \"%s\", args = q)\n\n", fn_name);
    }

    static generate_file(file_name)
    {
        const fMap = require("./api.js");
        fs.writeFileSync(file_name, DbApiGen.start_of_doc);
        Object.keys(fMap).forEach(fn_name => {
            fs.appendFileSync(file_name, DbApiGen.generate_fn(fn_name));
        });
        fs.appendFileSync(file_name, DbApiGen.end_of_doc);
    }
}


if (typeof require != "undefined" && require.main === module) {
    DbApiGen.generate_file("db_gen_api.py");
}
